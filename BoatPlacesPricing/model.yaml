BoatPlacesPricing:
  description: 'The purpose of the data model is to provide information on the pricing of mooring rings by category (length / Width). The information received relates only to pleasure boats and excludes commercial and passenger transport boats. The information on the Spot categories for boats is taken from the ISO 8666 standard.'
  properties:
    address:
      description: 'The mailing address'
      properties:
        addressCountry:
          description: 'Property. The country. For example, Spain. Model:''https://schema.org/addressCountry'''
          type: string
        addressLocality:
          description: 'Property. The locality in which the street address is, and which is in the region. Model:''https://schema.org/addressLocality'''
          type: string
        addressRegion:
          description: 'Property. The region in which the locality is, and which is in the country. Model:''https://schema.org/addressRegion'''
          type: string
        postOfficeBoxNumber:
          description: 'Property. The post office box number for PO box addresses. For example, 03578. Model:''https://schema.org/postOfficeBoxNumber'''
          type: string
        postalCode:
          description: 'Property. The postal code. For example, 24004. Model:''https://schema.org/https://schema.org/postalCode'''
          type: string
        streetAddress:
          description: 'Property. The street address. Model:''https://schema.org/streetAddress'''
          type: string
      type: object
      x-ngsi:
        model: https://schema.org/address
        type: Property
    alternateName:
      description: 'An alternative name for this item'
      type: string
      x-ngsi:
        type: Property
    areaServed:
      description: 'The geographic area where a service or offered item is provided'
      type: string
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: string
      x-ngsi:
        type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: string
      x-ngsi:
        type: Property
    dateLastReported:
      description: 'A timestamp which denotes the last time when the device successfully reported data. The date and time of this observation in ISO8601 UTCformat'
      format: date-time
      type: string
      x-ngsi:
        model: https://schema.org/DateTime
        type: Property
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: string
      x-ngsi:
        type: Property
    description:
      description: 'A description of this item'
      type: string
      x-ngsi:
        type: Property
    fairing:
      description: 'Ticket price of the place for fairing boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro â‚¬'
      properties:
        day:
          type: number
        month:
          type: number
        week:
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/StructuredValue
        type: Property
    id:
      anyOf: &boatplacespricing_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      x-ngsi:
        type: Property
    location:
      description: 'Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon'
      oneOf:
        - description: 'Geoproperty. Geojson reference to the item. Point'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. LineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. Polygon'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiPoint'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiLineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiLineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      x-ngsi:
        type: Geoproperty
    maxDraft:
      description: 'Maximum draft allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) '
      type: number
      x-ngsi:
        model: https://schema.org/Number
        type: Property
        units: metres
    maxLength:
      description: 'Maximum length allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) '
      type: number
      x-ngsi:
        model: https://schema.org/number
        type: Property
        units: metres
    maxWidth:
      description: 'Maximum width allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) '
      type: number
      x-ngsi:
        model: https://schema.org/width
        type: Property
        units: metres
    minLength:
      description: 'Minimum length allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) '
      type: number
      x-ngsi:
        model: https://schema.org/number
        type: Property
        units: metres
    name:
      description: 'The name of this item.'
      type: string
      x-ngsi:
        type: Property
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *boatplacespricing_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: array
      x-ngsi:
        type: Property
    passage:
      description: 'Ticket price of the place for passing boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro â‚¬'
      properties:
        day:
          type: number
        month:
          type: number
        week:
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/StructuredValue
        type: Property
    period:
      description: 'Type of period defined the date From and Through: A free text or a unique value of the different combination allowed ''season / offSeason'' - ''summer / winter'' - ''low / medium / high''. enum:''high, low, medium, offSeason, season, summer, winter'''
      enum:
        - high
        - low
        - medium
        - offSeason
        - season
        - summer
        - winter
      type: string
      x-ngsi:
        model: https://schema.org/DateTime
        type: Property
    refPointOfInterest:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the Repository'
      x-ngsi:
        model: https://schema.org/URL
        type: Relationship
    refSeaPort:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Reference to the entity [Seaport](https://github.com/smart-data-models/dataModel.Port/blob/master/Seaport/doc/spec.md) to use as main link'
      x-ngsi:
        model: https://schema.org/URL
        type: Relationship
    resident:
      description: 'Ticket price of the place for resident boats for this category / period. A structured value with 2 subproperties where each items is a string in the format `key` : `price` in Euro â‚¬'
      properties:
        annual:
          type: number
        month:
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/StructuredValue
        type: Property
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            format: uri
            type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      x-ngsi:
        type: Property
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: string
      x-ngsi:
        type: Property
    spotCategoryRange:
      description: 'List from the lowest to the highest categories: A combination of them. Enum:''A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T1, T2, U, V, W, X, Y, Z, Z01, Z02, Z03, Z04, Z05, Z06, Z07, Z08, Z08, Z09, Z10, Z11, Z12, Z13, Z14, Z15, Z16, Z17'''
      items:
        enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T1
          - T2
          - U
          - V
          - W
          - X
          - Y
          - Z
          - Z01
          - Z02
          - Z03
          - Z04
          - Z05
          - Z06
          - Z07
          - Z08
          - Z08
          - Z09
          - Z10
          - Z11
          - Z12
          - Z13
          - Z14
          - Z15
          - Z16
          - Z17
        type: string
      type: array
      x-ngsi:
        type: Property
    type:
      description: 'NGSI Entity type. It has to be BoatPlacePricing'
      enum:
        - BoatPlacesPricing
      type: string
      x-ngsi:
        type: Property
    validFrom:
      description: 'Start date and time of the pricing rules.'
      format: date-time
      type: string
      x-ngsi:
        model: https://schema.org/DateTime
        type: Property
    validThrough:
      description: 'End date and time of the pricing rules.'
      format: date-time
      type: string
      x-ngsi:
        model: https://schema.org/DateTime
        type: Property
    wintering:
      description: 'Ticket price of the place for wintering boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro â‚¬'
      properties:
        day:
          type: number
        month:
          type: number
        week:
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/StructuredValue
        type: Property
  required:
    - id
    - type
    - location
    - dateLastReported
    - refSeaPort
    - spotCategoryRange
    - validFrom
    - validThrough
  type: object
  x-derived-from: ""
  x-disclaimer: 'Redistribution and use in source and binary forms, with or without modification, are permitted  provided that the license conditions are met. Copyleft (c) 2021 Contributors to Smart Data Models Program'
  x-license-url: https://github.com/smart-data-models/dataModel.Ports/blob/master/BoatPlacesPricing/LICENSE.md
  x-model-schema: https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json
  x-model-tags: ""
  x-version: 0.0.1
