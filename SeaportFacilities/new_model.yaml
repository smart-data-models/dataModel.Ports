SeaportFacilities:
  description: 'The Data Model is intended to provide information about ports that can accommodate pleasure craft, commerce or passenger  transport. It permit to represent the parameters of each port, its location, its mooring capacities and the free or paid services associated with it provided directly by the port or by professionals working on or near the port.'
  properties:
    address:
      description: 'The mailing address.'
      properties:
        addressCountry:
          description: 'Property. The country. For example, Spain. Model:''https://schema.org/Text'''
          type: string
        addressLocality:
          description: 'Property. The locality in which the street address is, and which is in the region. Model:''https://schema.org/Text'''
          type: string
        addressRegion:
          description: 'Property. The region in which the locality is, and which is in the country. Model:''https://schema.org/Text'''
          type: string
        areaServed:
          description: 'Property. The geographic area where a service or offered item is provided. Model:''https://schema.org/Text'''
          type: string
        postOfficeBoxNumber:
          description: 'Property. The post office box number for PO box addresses. For example, Spain. Model:''https://schema.org/Text'''
          type: string
        postalCode:
          description: 'Property. The postal code. For example, Spain. Model:''https://schema.org/Text'''
          type: string
        streetAddress:
          description: 'Property. The street address. Model:''https://schema.org/Text'''
          type: string
      type: Property
    alternateName:
      description: 'An alternative name for this item'
      type: Property
    areaServed:
      description: 'The geographic area where a service or offered item is provided'
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    authorizedPropulsion:
      description: 'A Type of propulsions authorized to enter in the harbor. A combination of motor, sail, electric, oar, nuclear, lng, lpg, other'
      items:
        enum:
          - motor
          - sail
          - electric
          - oar
          - nuclear
          - lng
          - lpg
          - other
        type: string
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    boatSupplyingServices:
      description: 'escription of the complementary supplying services for the boat offered by professionals working on or near the harbor. A combination of guarding, fuelStation, fuelTankerTruck , drinkingWaterTankerTruck, provisioning, dryFairing, waterFairing, repair, expertise, gangways, liftingCranes, towing, wasteWaterPumping, boatConveying, boatTransfer, other'
      items:
        enum:
          - guarding
          - fuelStation
          - fuelTankerTruck
          - drinkingWaterTankerTruck
          - provisioning
          - dryFairing
          - waterFairing
          - repair
          - expertise
          - gangways
          - liftingCranes
          - towing
          - wasteWaterPumping
          - boatConveying
          - boatTransfer
          - other
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    contactPoint:
      description: https://schema.org/ContactPoint
      type: Property
    contractingAuthority:
      description: 'Name of the contracting authority'
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    contractingCompany:
      description: 'The Contracting Company responsible of the management of the port.'
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    currencyAccepted:
      description: 'A combination of a list of active codes defined in the model [Norme ISO 4217](http://en.wikipedia.org/wiki/ISO_4217), [Crypto Currencies](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) , [Exchange Trading System](https://en.wikipedia.org/wiki/Local_exchange_trading_system'
      items:
        enum:
          - AUD
          - GBP
          - EUR
          - JPY
          - CHF
          - USD
          - AFN
          - ALL
          - DZD
          - AOA
          - ARS
          - AMD
          - AWG
          - AUD
          - 'ATS (EURO)'
          - 'BEF (EURO)'
          - AZN
          - BSD
          - BHD
          - BDT
          - BBD
          - BYR
          - BZD
          - BMD
          - BTN
          - BOB
          - BAM
          - BWP
          - BRL
          - GBP
          - BND
          - BGN
          - BIF
          - XOF
          - XAF
          - XPF
          - KHR
          - CAD
          - CVE
          - KYD
          - CLP
          - CNY
          - COP
          - KMF
          - CDF
          - CRC
          - HRK
          - CUC
          - CUP
          - 'CYP (EURO)'
          - CZK
          - DKK
          - DJF
          - DOP
          - XCD
          - EGP
          - SVC
          - 'EEK (EURO)'
          - ETB
          - EUR
          - FKP
          - 'FIM (EURO)'
          - FJD
          - GMD
          - GEL
          - 'DMK (EURO)'
          - GHS
          - GIP
          - 'GRD (EURO)'
          - GTQ
          - GNF
          - GYD
          - HTG
          - HNL
          - HKD
          - HUF
          - ISK
          - INR
          - IDR
          - IRR
          - IQD
          - 'IED (EURO)'
          - ILS
          - 'ITL (EURO)'
          - JMD
          - JPY
          - JOD
          - KZT
          - KES
          - KWD
          - KGS
          - LAK
          - 'LVL (EURO)'
          - LBP
          - LSL
          - LRD
          - LYD
          - 'LTL (EURO)'
          - 'LUF (EURO)'
          - MOP
          - MKD
          - MGA
          - MWK
          - MYR
          - MVR
          - 'MTL (EURO)'
          - MRO
          - MUR
          - MXN
          - MDL
          - MNT
          - MAD
          - MZN
          - MMK
          - ANG
          - NAD
          - NPR
          - 'NLG (EURO)'
          - NZD
          - NIO
          - NGN
          - KPW
          - NOK
          - OMR
          - PKR
          - PAB
          - PGK
          - PYG
          - PEN
          - PHP
          - PLN
          - 'PTE (EURO)'
          - QAR
          - RON
          - RUB
          - RWF
          - WST
          - STD
          - SAR
          - RSD
          - SCR
          - SLL
          - SGD
          - 'SKK (EURO)'
          - 'SIT (EURO)'
          - SBD
          - SOS
          - ZAR
          - KRW
          - 'ESP (EURO)'
          - LKR
          - SHP
          - SDG
          - SRD
          - SZL
          - SEK
          - CHF
          - SYP
          - TWD
          - TZS
          - THB
          - TOP
          - TTD
          - TND
          - TRY
          - TMM
          - USD
          - UGX
          - UAH
          - UYU
          - AED
          - VUV
          - VEB
          - VND
          - YER
          - ZMK
          - ZWD
        type: string
      type: Property
      x-ngsi:
        model: 'https://schema.org/currenciesAccepted, .Currency accepted for payment'
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    dateLastReported:
      description: 'A timestamp which denotes the last time when a flow successfully reported data. The date and time of this Repository in ISO8601 UTCformat'
      format: date-time
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    description:
      description: 'A description of this item'
      type: Property
    electricTransport:
      description: ' List of the different types of electric transport proposed by the city. A combination of electricCar, electricBycicle, electricMotorBike, electricScooter '
      items:
        enum:
          - electricCar
          - electricBycicle
          - electricMotorBike
          - electricScooter
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    facilities:
      description: 'Description of the proposed facilities on the harbor. A combination of : toilets, showers, laundry, telephone, dustbins, dumpsters, container, selectiveSortingWaste, electricTerminal, waterTerminal, indoorRoomReservation, wifi, other'
      items:
        enum:
          - toilets
          - showers
          - laundry
          - telephone
          - dustbins
          - dumpsters
          - container
          - selectiveSortingWaste
          - electricTerminal
          - waterTerminal
          - 'indoorRoomReservation '
          - wifi
          - other
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    id:
      anyOf: &seaportfacilities_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      type: Property
    location:
      $id: https://geojson.org/schema/Geometry.json
      $schema: "http://json-schema.org/draft-07/schema#"
      oneOf:
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      title: 'GeoJSON Geometry'
    maxDraft:
      description: 'A Maximum draft allowed to access the harbor. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . For instance, **MTR** represents Meter'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: MTR
    maxLength:
      description: 'A Maximum length allowed to access the harbor. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . For instance, **MTR** represents Meter'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: MTR
    maxTonnage:
      description: 'Maximum tonnage authorized to access the harbor. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . For instance, **TNE** represents Tonne Metric.'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: TNE
    maxWidth:
      description: 'A Maximum width allowed to access the harbor. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . For instance, **MTR** represents Meter'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: MTR
    minLength:
      description: 'A Minimum length allowed to access the harbor. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **MTR** represents Meter'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: MTR
    name:
      description: 'The name of this item.'
      type: Property
    nearbyServices:
      description: 'Description of the additional services on the geographical area on or near the harbor. A combination of :touristOffice, fittingsStores, travelAgency, exchangeOffice, medicalOffice, pharmacy, groceryStores, restaurants, presses, bar, shops, seaExcursions, cityTour, touristicExcursions, others'
      items:
        enum:
          - touristOffice
          - fittingsStores
          - travelAgency
          - exchangeOffice
          - medicalOffice
          - pharmacy
          - groceryStores
          - restaurants
          - presses
          - bar
          - shops
          - seaExcursions
          - cityTour
          - touristicExcursions
          - others
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    numberOfPlace:
      description: 'Total number of place in the harbor.'
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
    openingHoursSpecification:
      description: 'A structured value providing information about the opening hours of a place or a certain service inside a place.'
      items:
        properties:
          closes:
            format: time
            type: string
          dayOfWeek:
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
              - PublicHolidays
            type: string
          opens:
            format: time
            type: string
          validFrom:
            format: date-time
            type: string
          validThrough:
            format: date-time
            type: string
      minItems: 1
      type: Property
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *seaportfacilities_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Property
    paymentAccepted:
      description: 'Accepted payment. A combination of a list of active codes defined in the model : Cash, CreditCard, CryptoCurrency, other'
      items:
        enum:
          - Cash
          - CreditCard
          - CryptoCurrency
          - other
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    portServicesProvided:
      description: 'Description of the services provided directly by the harbor. A combination of : harborOffice, weather, customsServices, porters, boatRingRental, mooringAssistance, handlingAssistance, publicWifi, privateWifi, other'
      items:
        enum:
          - harborOffice
          - weather
          - customsServices
          - porters
          - boatRingRental
          - mooringAssistance
          - handlingAssistance
          - publicWifi
          - privateWifi
          - other
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    refBoatAuthorized:
      description: 'Reference to a list of [Entity](https://github.com/smart-data-models/dataModel.Port/blob/master/BoatAuthorized/doc/spec.md).'
      items:
        anyOf: *seaportfacilities_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: array
    refBoatPlaceAvailable:
      description: 'Reference to a list of [Entity](https://github.com/smart-data-models/dataModel.Port/blob/master/BoatPlaceAvailable/doc/spec.md)'
      items:
        anyOf: *seaportfacilities_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Property
      x-ngsi:
        model: https://schema.org/URL
    refBoatPlacePricing:
      description: 'Reference to a list of [Entity](https://github.com/smart-data-models/dataModel.Port/blob/master/BoatPlacePricing/doc/spec.md)'
      items:
        anyOf: *seaportfacilities_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Relationship
      x-ngsi:
        model: https://schema.org/URL
    refDevice:
      description: 'Reference to the Main Entity [Device](https://github.com/smart-data-models/dataModel.Device/blob/master/Device/doc/spec.md) if used as second link'
      type:
        anyOf:
          - description: 'Property. Identifier format of any NGSI entity'
            maxLength: 256
            minLength: 1
            pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
            type: string
          - description: 'Property. Identifier format of any NGSI entity'
            format: uri
            type: string
    refPointOfInterest:
      description: 'Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the Repository'
      type:
        anyOf:
          - description: 'Property. Identifier format of any NGSI entity'
            maxLength: 256
            minLength: 1
            pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
            type: string
          - description: 'Property. Identifier format of any NGSI entity'
            format: uri
            type: string
    rentalSaleServices:
      description: 'ADescription of services provided by professional sales or rental agencies on the geographical area on or near the harbor. A combination of : boatRental, boatSale, jetSkiRental, jetSkiSale, carRental, luxuryCarRental, vanRental, bikeRental, scooterRental, Caddie, palletTransport, other'
      items:
        enum:
          - boatRental
          - boatSale
          - jetSkiRental
          - jetSkiSale
          - carRental
          - luxuryCarRental
          - vanRental
          - bikeRental
          - scooterRental
          - Caddie
          - palletTransport
          - Others
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    routeType:
      description: "List of the different types of urban transport Mode (Metro, Bus, Tram, ...) from the urban transport Mode GFTS standard [STOP](https://developers.google.com/transit/gtfs/reference/#stopstxt). A combination of values composed only of the attribute 'description' tram(0), metro(1), train(2), bus(3), ferry(4), cableTram(5), cableCar(6), funicular(7), trolleybus(11), monorail(12)"
      items:
        enum:
          - tram
          - metro
          - train
          - bus
          - ferry
          - cableTram
          - cableCar
          - funicular
          - trolleybus
          - monorail
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/Text
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            - format: uri
              type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      type: Property
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: Property
    transportServices:
      description: 'Description of the services provided for dedicated transport and shuttle services. A combination of : arking, shuttlesToAirport, shuttlesToRailway, internalShuttles, taxis, heliport, other'
      items:
        enum:
          - parking
          - shuttlesToAirport
          - shuttlesToRailway
          - internalShuttle
          - taxis
          - heliport
          - Others
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    type:
      description: 'It has to be SeaPort'
      enum:
        - SeaPort
      type: Property
    typeOfPort:
      description: 'A Type of harbor. A combination of : marina, merchandise, cruise, ferry, passengers, yachting, fishing, military, river, other'
      items:
        enum:
          - marina
          - merchandise
          - cruise
          - ferry
          - passengers
          - yachting
          - fishing
          - military
          - river
          - other
        type: string
      type: Property
      x-ngsi:
        model: http://schema.org/DateTime
    webSite:
      description: 'Link to the official website of the harbor for more information.'
      type: Property
      x-ngsi:
        model: https://schema.org/Text
  required:
    - id
    - type
    - location
    - dateLastReported
    - typeOfPort
  type: object
